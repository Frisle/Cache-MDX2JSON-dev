<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="MDX2JSON.Installer">
<TimeCreated>63481,77165.410085</TimeCreated>

<XData name="Manifest">
<XMLNamespace>INSTALLER</XMLNamespace>
<Data><![CDATA[
<Manifest>
<If Condition='(##class(Config.Namespaces).Exists("${Namespace}")=0)'>
<Log Text="Creating namespace ${Namespace}" Level="0"/>
<Namespace Name="${Namespace}" Create="yes" Code="${Namespace}" Data="${Namespace}">
<Configuration>
<Database Name="${Namespace}" Dir="${MGRDIR}/${Namespace}" Create="yes" MountRequired="true" MountAtStartup="true"/>
</Configuration>
</Namespace>
 <Log Text="End Creating namespace ${Namespace}" Level="0"/>
</If>

<Namespace Name="${Namespace}" Create="no">
<Import File="${SourceDir}"/>
<Log Text="Creating web application /${Namespace}" Level="0"/>
<CSPApplication Url="/${Namespace}" Directory="${CSPDIR}/${Namespace}" AuthenticationMethods="64" IsNamespaceDefault="false" />
<RunInstall Class="MDX2JSON.Installer" Method="SetDispatchClass"/>
</Namespace>

<If Condition='(##class(Config.Namespaces).Exists("%All")=0)'>
<Log Text="Creating namespace %All" Level="0"/>
<Namespace Name="%All" Create="yes" Code="All" Data="All">
<Configuration>
<Database Name="All" Dir="${MGRDIR}/All" Create="yes" MountRequired="true" MountAtStartup="true"/>
</Configuration>
</Namespace>
</If>

<Log Text="Mapping MDX2JSON package to %All namespace" Level="0"/>
<Namespace Name="%All" Create="no">
<ClassMapping From="${Namespace}" Package="MDX2JSON"/> 
</Namespace>
</Manifest>
]]></Data>
</XData>

<Method name="setup">
<Description>
 This is a method generator whose code is generated by XGL.
Set pVars("Namespace")="MDX2JSON"
Set pVars("SourceDir")="C:\temp\MDX2JSON\MDX2JSON"
do ##class(MDX2JSON.Installer).setup(.pVars)</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<CodeMode>objectgenerator</CodeMode>
<FormalSpec><![CDATA[&pVars,pLogLevel:%Integer,pInstaller:%Installer.Installer]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[ 	Quit ##class(%Installer.Manifest).%Generate(%compiledclass, %code, "Manifest")
]]></Implementation>
</Method>

<Method name="DetermineAllNamespace">
<ClassMethod>1</ClassMethod>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	
	set rset=##class(%ScrollableResultSet).%New("Config.Namespaces:List")
	do rset.Prepare()
	do rset.Execute("%All")
	return 'rset.Count()
]]></Implementation>
</Method>

<Method name="SetDispatchClass">
<ClassMethod>1</ClassMethod>
<FormalSpec>pVars,pLogLevel,tInstaller</FormalSpec>
<Implementation><![CDATA[
    s tUrl=tInstaller.Evaluate("/${Namespace}")
    Do tInstaller.PushNS("%SYS")
    s p("DispatchClass")="MDX2JSON.REST"
    Set tSC = ##class(Security.Applications).Modify(tUrl, .p)
    Do tInstaller.PopNS()
    If $$$ISERR(tSC) Throw ##class(%Installer.Exception).CreateFromStatus(tSC)
    quit $$$OK
]]></Implementation>
</Method>
</Class>
</Export>
